name: Deploy Component
run-name: Build and Deploy ${{ github.event.inputs.component }} to ${{ github.event.inputs.environment }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: The name of the environment to be deployed
        required: true
      component:
        description: The component to deploy
        required: true

permissions:
  id-token: write
  contents: read
  packages: write
  checks: write

env:
  rg-name: cd-mindaro
  cluster-name: cdmindaro
  namespace: bikeapp
  base-url: cdmindaro.southcentralus.cloudapp.azure.com

jobs:
  fake-deploy:
    runs-on: ubuntu-latest
    environment:
      name: demo
      url: http://josh-ops.com
    steps:
    - run: sleep 5
    
  # test:
  #   runs-on: ubuntu-22.04
  #   steps:
  #   - uses: LouisBrunner/checks-action@v1.3.1
  #     id: check_in_progress
  #     with:
  #       token: ${{ secrets.GITHUB_TOKEN }}
  #       name: Build and push ${{ github.event.inputs.component }} image
  #       status: in_progress
    
  #   - run: sleep 20

  #   - uses: LouisBrunner/checks-action@v1.3.1
  #     if: always()
  #     with:
  #       token: ${{ secrets.GITHUB_TOKEN }}
  #       check_id: ${{ steps.check_in_progress.outputs.check_id }}
  #       status: ${{ job.status }}
  
  # build-container:
  #   name: Build component image
  #   runs-on: ubuntu-20.04

  #   outputs:
  #     container-meta-json: ${{ steps.meta.outputs.json }}

  #   steps:
  #   - name: Login to GHCR
  #     uses: docker/login-action@v2
  #     with:
  #       registry: ghcr.io
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}

  # approve:
  #   needs: deploy-canary
  #   name: Approval
  #   runs-on: ubuntu-20.04
  #   environment:
  #     name: ${{ github.event.inputs.environment }}-approve
    
  #   steps:
  #   - run: echo Approval requested
  
  # promote-reject:
  #   name: Promote/Reject
  #   if: ${{ always() && !cancelled() }}
  #   needs:
  #   - approve
  #   - deploy-canary
  #   runs-on: ubuntu-20.04
  #   environment:
  #     name: ${{ github.event.inputs.environment }}

  #   steps:
  #   - uses: actions/download-artifact@v3
  #     with:
  #       name: manifests
  #       path: ${{ runner.temp }}

  #   - uses: azure/login@v1
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
  #   - uses: azure/aks-set-context@v3
  #     with:
  #       resource-group: ${{ env.rg-name }}
  #       cluster-name: ${{ env.cluster-name }}

  #   - name: Promote canary
  #     uses: azure/k8s-deploy@v1.5
  #     if: ${{ needs.approve.result == 'success' }}
  #     with:
  #       manifests: ${{ needs.deploy-canary.outputs.manifestsBundle }}
  #       namespace: ${{ env.namespace }}
  #       images: ${{ needs.deploy-canary.outputs.imageRepo }}:${{ needs.deploy-canary.outputs.imageTag }}
  #       strategy: canary
  #       action: promote

  #   - name: Reject canary
  #     uses: azure/k8s-deploy@v1.5
  #     if: ${{ needs.approve.result == 'failure' }}
  #     with:
  #       manifests: ${{ needs.deploy-canary.outputs.manifestsBundle }}
  #       namespace: ${{ env.namespace }}
  #       strategy: canary
  #       action: reject
